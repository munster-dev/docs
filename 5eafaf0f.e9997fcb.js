(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{73:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return o})),r.d(t,"metadata",(function(){return c})),r.d(t,"rightToc",(function(){return i})),r.d(t,"default",(function(){return l}));var n=r(2),a=(r(0),r(96));const o={id:"custom-pipes.md",title:"Custom pipes",sidebar_label:"Custom pipes",slug:"/custom-pipes"},c={unversionedId:"custom-pipes.md",id:"custom-pipes.md",isDocsHomePage:!1,title:"Custom pipes",description:"Custom pipes allow us to create reusable transformers that can be used directly in the template or in logic of our components.",source:"@site/docs\\custom-pipes.md",slug:"/custom-pipes",permalink:"/docs/docs/custom-pipes",editUrl:"https://github.com/munster-dev/docs/blob/master/docs/custom-pipes.md",version:"current",sidebar_label:"Custom pipes",sidebar:"someSidebar",previous:{title:"Pipes",permalink:"/docs/docs/pipes"},next:{title:"Services",permalink:"/docs/docs/services"}},i=[{value:"Create a pipe",id:"create-a-pipe",children:[]}],p={rightToc:i};function l({components:e,...t}){return Object(a.b)("wrapper",Object(n.a)({},p,t,{components:e,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Custom pipes allow us to create reusable transformers that can be used directly in the template or in logic of our components."),Object(a.b)("h2",{id:"create-a-pipe"},"Create a pipe"),Object(a.b)("p",null,"To create a custom pipe, we can use the ",Object(a.b)("a",Object(n.a)({parentName:"p"},{href:"./cli-what-is-cli"}),"cli")," to automatically generate a pipe file with boilerplate codes or we can manually create a file and write the code from scratch."),Object(a.b)("p",null,"The following code is an example of a working pipe codes but without functions yet."),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"import { Pipe } from '@munster-dev/core';\n\n@Pipe('lowercase')\nexport class LowercasePipe {\n    transform(value, args) {\n    }\n}\n")),Object(a.b)("p",null,"In the example above, the ",Object(a.b)("inlineCode",{parentName:"p"},"transform(value, args)")," method will do the transformation and what ever this method returns will be the transformed data."),Object(a.b)("table",null,Object(a.b)("thead",{parentName:"table"},Object(a.b)("tr",{parentName:"thead"},Object(a.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Params"),Object(a.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(a.b)("tbody",{parentName:"table"},Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"value"),Object(a.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The value to be transformed.")),Object(a.b)("tr",{parentName:"tbody"},Object(a.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"args"),Object(a.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"The parameters of the pipe when used in the template or in logic.")))),Object(a.b)("p",null,"Ex."),Object(a.b)("pre",null,Object(a.b)("code",Object(n.a)({parentName:"pre"},{className:"language-typescript"}),"import { Pipe } from '@munster-dev/core';\n\n@Pipe('lowercase')\nexport class LowercasePipe {\n    transform(value, args) {\n        return value.toLowerCase();\n    }\n}\n")))}l.isMDXComponent=!0},96:function(e,t,r){"use strict";r.d(t,"a",(function(){return u})),r.d(t,"b",(function(){return d}));var n=r(0),a=r.n(n);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function c(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?c(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):c(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=a.a.createContext({}),s=function(e){var t=a.a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},u=function(e){var t=s(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,c=e.parentName,l=p(e,["components","mdxType","originalType","parentName"]),u=s(r),m=n,d=u["".concat(c,".").concat(m)]||u[m]||b[m]||o;return r?a.a.createElement(d,i(i({ref:t},l),{},{components:r})):a.a.createElement(d,i({ref:t},l))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,c=new Array(o);c[0]=m;var i={};for(var p in t)hasOwnProperty.call(t,p)&&(i[p]=t[p]);i.originalType=e,i.mdxType="string"==typeof e?e:n,c[1]=i;for(var l=2;l<o;l++)c[l]=r[l];return a.a.createElement.apply(null,c)}return a.a.createElement.apply(null,r)}m.displayName="MDXCreateElement"}}]);