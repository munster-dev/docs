(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{78:function(e,n,t){"use strict";t.r(n),t.d(n,"frontMatter",(function(){return a})),t.d(n,"metadata",(function(){return l})),t.d(n,"rightToc",(function(){return o})),t.d(n,"default",(function(){return c}));var r=t(2),i=(t(0),t(96));const a={id:"list-rendering.md",title:"List rendering",sidebar_label:"List rendering",slug:"/list-rendering"},l={unversionedId:"list-rendering.md",id:"list-rendering.md",isDocsHomePage:!1,title:"List rendering",description:"List rendering directive allows developers to render a list of element based on the given array of data.",source:"@site/docs\\list-rendering.md",slug:"/list-rendering",permalink:"/docs/docs/list-rendering",editUrl:"https://github.com/munster-dev/docs/blob/master/docs/list-rendering.md",version:"current",sidebar_label:"List rendering",sidebar:"someSidebar",previous:{title:"Services",permalink:"/docs/docs/services"},next:{title:"Conditional rendering",permalink:"/docs/docs/conditional-rendering"}},o=[{value:"Syntax",id:"syntax",children:[]},{value:"Using list rendering",id:"using-list-rendering",children:[]},{value:"List item name",id:"list-item-name",children:[]},{value:"List index",id:"list-index",children:[]},{value:"Update event",id:"update-event",children:[]}],p={rightToc:o};function c({components:e,...n}){return Object(i.b)("wrapper",Object(r.a)({},p,n,{components:e,mdxType:"MDXLayout"}),Object(i.b)("p",null,"List rendering directive allows developers to render a list of element based on the given array of data."),Object(i.b)("h2",{id:"syntax"},"Syntax"),Object(i.b)("p",null,"The syntax of list rendering directive is ",Object(i.b)("inlineCode",{parentName:"p"},"v:for={<array>}"),"."),Object(i.b)("h2",{id:"using-list-rendering"},"Using list rendering"),Object(i.b)("p",null,"Here's an example on how to use list rendering."),Object(i.b)("p",null,"Ex."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),"import { Component } from '@munster-dev/core';\n\n@Component('app-greeting')\nexport class Greeting {\n\n    array = [1, 2, 3];\n\n    render() {\n        return <p v:for={this.array}>Hello World!</p>\n    }\n}\n")),Object(i.b)("p",null,"The example code above will generate a list of elements that looks like the following:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-html"}),"<p>Hello World!</p>\n<p>Hello World!</p>\n<p>Hello World!</p>\n")),Object(i.b)("p",null,"Three ",Object(i.b)("inlineCode",{parentName:"p"},"<p>")," tags since there are three elements inside ",Object(i.b)("inlineCode",{parentName:"p"},"this.array"),"."),Object(i.b)("h2",{id:"list-item-name"},"List item name"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},'v:for-item="<item name>"')),Object(i.b)("p",null,"It allows developers to set the variable name of the list item and display it in view.\nIf no list item directive is provided, it is ",Object(i.b)("inlineCode",{parentName:"p"},"$item")," by default."),Object(i.b)("p",null,"Ex."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),"import { Component } from '@munster-dev/core';\n\n@Component('app-greeting')\nexport class Greeting {\n\n    array = ['foo', 'bar', 'bazz'];\n\n    render() {\n        return <p v:for={this.array} v:for-item=\"listItem\">Hello {listItem}!</p>\n    }\n}\n")),Object(i.b)("p",null,"The example code above will generate a list of elements that looks like the following:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-html"}),"<p>Hello foo!</p>\n<p>Hello bar!</p>\n<p>Hello bazz!</p>\n")),Object(i.b)("h2",{id:"list-index"},"List index"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},'v:for-index="<index name>"')),Object(i.b)("p",null,"It allows developers to set the variable name of the list item index.\nIf no list index directive is provided, it is ",Object(i.b)("inlineCode",{parentName:"p"},"$index")," by default."),Object(i.b)("p",null,"Ex."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),"import { Component } from '@munster-dev/core';\n\n@Component('app-greeting')\nexport class Greeting {\n\n    array = ['foo', 'bar', 'bazz'];\n\n    render() {\n        return <p v:for={this.array} v:for-index=\"listIndex\">Hello {listIndex}!</p>\n    }\n}\n")),Object(i.b)("p",null,"The example code above will generate a list of elements that looks like the following:"),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-html"}),"<p>Hello 0!</p>\n<p>Hello 1!</p>\n<p>Hello 2!</p>\n")),Object(i.b)("h2",{id:"update-event"},"Update event"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"v:for-update={<callback function>}")),Object(i.b)("p",null,"List rendering is able to trigger an event if there is a change in the length of the array."),Object(i.b)("p",null,"Ex."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),"import { Component } from '@munster-dev/core';\n\n@Component('app-greeting')\nexport class Greeting {\n\n    array = [1, 2, 3];\n\n    arrayLengthUpdated() {\n        console.log('array length is updated');\n    }\n\n    render() {\n        return <p v:for={this.array} v:for-update={this.arrayLengthUpdated}>Hello World!</p>\n    }\n}\n")))}c.isMDXComponent=!0},96:function(e,n,t){"use strict";t.d(n,"a",(function(){return d})),t.d(n,"b",(function(){return m}));var r=t(0),i=t.n(r);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function p(e,n){if(null==e)return{};var t,r,i=function(e,n){if(null==e)return{};var t,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(i[t]=e[t]);return i}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var c=i.a.createContext({}),s=function(e){var n=i.a.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},d=function(e){var n=s(e.components);return i.a.createElement(c.Provider,{value:n},e.children)},b={inlineCode:"code",wrapper:function(e){var n=e.children;return i.a.createElement(i.a.Fragment,{},n)}},u=i.a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),d=s(t),u=r,m=d["".concat(l,".").concat(u)]||d[u]||b[u]||a;return t?i.a.createElement(m,o(o({ref:n},c),{},{components:t})):i.a.createElement(m,o({ref:n},c))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,l=new Array(a);l[0]=u;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=e,o.mdxType="string"==typeof e?e:r,l[1]=o;for(var c=2;c<a;c++)l[c]=t[c];return i.a.createElement.apply(null,l)}return i.a.createElement.apply(null,t)}u.displayName="MDXCreateElement"}}]);