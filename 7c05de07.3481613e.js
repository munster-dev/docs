(window.webpackJsonp=window.webpackJsonp||[]).push([[23],{79:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return s})),n.d(t,"default",(function(){return l}));var r=n(2),a=(n(0),n(96));const o={id:"store.md",title:"Store",sidebar_label:"Store",slug:"/store"},i={unversionedId:"store.md",id:"store.md",isDocsHomePage:!1,title:"Store",description:"Store is a state management built for MunsterJS framework.",source:"@site/docs\\store.md",slug:"/store",permalink:"/docs/docs/store",editUrl:"https://github.com/munster-dev/docs/blob/master/docs/store.md",version:"current",sidebar_label:"Store",sidebar:"someSidebar",previous:{title:"Router",permalink:"/docs/docs/router"},next:{title:"Http",permalink:"/docs/docs/http"}},s=[{value:"Installation",id:"installation",children:[]},{value:"Register the store",id:"register-the-store",children:[]},{value:"Initial state",id:"initial-state",children:[]},{value:"Setter",id:"setter",children:[]},{value:"Getter",id:"getter",children:[]},{value:"Subscribe to changes",id:"subscribe-to-changes",children:[]},{value:"Actions",id:"actions",children:[]}],c={rightToc:s};function l({components:e,...t}){return Object(a.b)("wrapper",Object(r.a)({},c,t,{components:e,mdxType:"MDXLayout"}),Object(a.b)("p",null,"Store is a state management built for MunsterJS framework.\nUsing this store will help developers to centralize and maintain the codes easily."),Object(a.b)("h2",{id:"installation"},"Installation"),Object(a.b)("p",null,"We can install the store to our project using npm or yarn."),Object(a.b)("p",null,"Ex."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"npm install @munster-dev/store\n")),Object(a.b)("p",null,"or"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-bash"}),"yarn add @munster-dev/store\n")),Object(a.b)("h2",{id:"register-the-store"},"Register the store"),Object(a.b)("p",null,"Store needs to be registered as a service before we can use it.\nPlease check the ",Object(a.b)("a",Object(r.a)({parentName:"p"},{href:"./services"}),"services")," for information on how to register a service."),Object(a.b)("p",null,"It is recommended that we register the store in the global container."),Object(a.b)("p",null,"Ex."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),"import { Container, GlobalDataSource, registerService } from '@munster-dev/core';\nimport { Store } from '@munster-dev/store';\n\nconst storeConfig = {\n    state: {}\n};\n\nconst container = new Container(new GlobalDataSource());\nregisterService(Store, container, storeConfig);\n")),Object(a.b)("p",null,"In the example above, the ",Object(a.b)("inlineCode",{parentName:"p"},"storeConfig")," is the initial state of the store."),Object(a.b)("h2",{id:"initial-state"},"Initial state"),Object(a.b)("p",null,"Initial state of the store is the state that is passed to the store as the initial data.\nThe initial state is required when registering the store."),Object(a.b)("p",null,"Here's an example on how to create an initial state:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),'// initial-state.ts\nimport { StoreInterface } from "@munster-dev/store";\n\nexport interface InitialStateInterface {\n    count: number;\n}\n\nexport const initialState: StoreInterface<InitialStateInterface> = {\n    state: {\n        count: 0\n    }\n}\n')),Object(a.b)("p",null,"After creating an initial state, we need to pass it as a service config for the store."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),"import { Container, GlobalDataSource, registerService } from '@munster-dev/core';\nimport { Store } from '@munster-dev/store';\nimport { initialState } from './initial-state';\n\nconst container = new Container(new GlobalDataSource());\nregisterService(Store, container, initialState);\n")),Object(a.b)("h2",{id:"setter"},"Setter"),Object(a.b)("p",null,"When we set a new value to state of store.\nThe change will be reflected to the components that has a subscription to this state."),Object(a.b)("p",null,"Ex."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),"import { Component } from '@munster-dev/core';\nimport { Store } from '@munster-dev/store';\nimport { InitialStateInterface } from './initial-state';\n\n@Component('app-greeting')\nexport class Greeting {\n    constructor(private store: Store<InitialStateInterface>) {}\n\n    btnClick() {\n        this.store.set('count', 100);\n    }\n    ...\n}\n")),Object(a.b)("h2",{id:"getter"},"Getter"),Object(a.b)("p",null,"To get a value from store, the we can call the store ",Object(a.b)("inlineCode",{parentName:"p"},"get")," method."),Object(a.b)("p",null,"Ex."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),"import { Component } from '@munster-dev/core';\nimport { Store } from '@munster-dev/store';\nimport { InitialStateInterface } from './initial-state';\n\n@Component('app-greeting')\nexport class Greeting {\n    constructor(private store: Store<InitialStateInterface>) {}\n\n    onInit() {\n        console.log(this.store.get('count'));\n    }\n    ...\n}\n")),Object(a.b)("h2",{id:"subscribe-to-changes"},"Subscribe to changes"),Object(a.b)("p",null,"Store also offers a way to subscribe for changes of each item of the state."),Object(a.b)("p",null,"Ex."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),"import { Component } from '@munster-dev/core';\nimport { Store } from '@munster-dev/store';\nimport { InitialStateInterface } from './initial-state';\n\n@Component('app-greeting')\nexport class Greeting {\n\n    constructor(private store: Store<InitialStateInterface>) {}\n\n    onInit() {\n        this.store.select('count').subscribe(state => {\n            console.log(state);\n        });\n    }\n    ...\n}\n")),Object(a.b)("h4",{id:"unsubscribe-to-store"},"Unsubscribe to store"),Object(a.b)("p",null,"All subscriptions must be unsubscribe when the component is destroyed or else it will cause a memory issue."),Object(a.b)("p",null,"Ex."),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-javascript"}),"import { Component, Subscription } from '@munster-dev/core';\nimport { Store } from '@munster-dev/store';\nimport { InitialStateInterface } from './initial-state';\n\n@Component('app-greeting')\nexport class Greeting {\n    subscription: Subscription;\n    constructor(private store: Store<InitialStateInterface>) {}\n\n    connectedCallback() {\n        this.subscription = this.store.select('count').subscribe(state => {\n            console.log(state);\n        });\n    }\n\n    disconnectedCallback() {\n        this.subscription.unsubscribe();\n    }\n    ...\n}\n")),Object(a.b)("h2",{id:"actions"},"Actions"),Object(a.b)("p",null,"Actions can also be used to update the state.\nUsing this can make your codes much cleaner and easy to manage."),Object(a.b)("h4",{id:"create-actions"},"Create actions"),Object(a.b)("p",null,"Here's an example on how to create an action:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),"import { createAction } from '@munster-dev/store';\n\ninterface PostInterface {\n    likesCount: number;\n    commentsCount: number;\n}\n\ninterface InitialStateInterface {\n    post: PostInterface;\n}\n\nexport const setPostLikesCount = createAction<number, PostInterface>((state: PostInterface, payload: number) => {\n    return {\n        ...state,\n        likesCount: payload\n    }\n});\n\nexport const initialState: StoreInterface<InitialStateInterface> = {\n    state: {\n        post: {\n            likesCount: 0,\n            commentsCount: 0\n        }\n    },\n    actions: {\n        post: [\n            setPostLikesCount // <--- action needs to be registered here\n        ]\n    }\n}\n")),Object(a.b)("p",null,"In the ",Object(a.b)("inlineCode",{parentName:"p"},"createAction"),", there are two generic types.\nFirst is the type of data that ",Object(a.b)("inlineCode",{parentName:"p"},"setPostLikesCount")," action will accept.\nThe second type is the type of the post state inside the store."),Object(a.b)("p",null,"There are two parameters for the ",Object(a.b)("inlineCode",{parentName:"p"},"createAction")," function.\nFirst is the state which holds the current state of the post.\nSecond is the payload which holds the value that is passed to the ",Object(a.b)("inlineCode",{parentName:"p"},"setPostLikesCount")," action when the action is called."),Object(a.b)("h4",{id:"dispatch-an-action"},"Dispatch an action"),Object(a.b)("p",null,"Here's an example on how to dispatch the created action above:"),Object(a.b)("pre",null,Object(a.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),"import { Component } from '@munster-dev/core';\nimport { Store } from '@munster-dev/store';\nimport { InitialStateInterface, setPostLikesCount } from './initial-state';\n\n@Component('app-greeting')\nexport class Greeting {\n\n    constructor(private store: Store<InitialStateInterface>) {}\n\n    btnClick() {\n        this.store.action(setPostLikesCount(100));\n    }\n}\n")))}l.isMDXComponent=!0},96:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return d}));var r=n(0),a=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=a.a.createContext({}),p=function(e){var t=a.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},b=function(e){var t=p(e.components);return a.a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},m=a.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),b=p(n),m=r,d=b["".concat(i,".").concat(m)]||b[m]||u[m]||o;return n?a.a.createElement(d,s(s({ref:t},l),{},{components:n})):a.a.createElement(d,s({ref:t},l))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:r,i[1]=s;for(var l=2;l<o;l++)i[l]=n[l];return a.a.createElement.apply(null,i)}return a.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"}}]);