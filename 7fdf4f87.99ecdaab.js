(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{80:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return a})),n.d(t,"rightToc",(function(){return c})),n.d(t,"default",(function(){return p}));var r=n(2),i=(n(0),n(96));const o={id:"directives.md",title:"Directives",sidebar_label:"Directives",slug:"/directives"},a={unversionedId:"directives.md",id:"directives.md",isDocsHomePage:!1,title:"Directives",description:"Directive is another way to change the appearance and add additional behavior to an element.",source:"@site/docs\\directives.md",slug:"/directives",permalink:"/docs/docs/directives",editUrl:"https://github.com/munster-dev/docs/blob/master/docs/directives.md",version:"current",sidebar_label:"Directives",sidebar:"someSidebar",previous:{title:"Lifecycle hooks",permalink:"/docs/docs/lifecycle-hooks"},next:{title:"Custom Directive",permalink:"/docs/docs/custom-directive"}},c=[{value:"Syntax",id:"syntax",children:[]},{value:"Available directives",id:"available-directives",children:[{value:"View model directive",id:"view-model-directive",children:[]},{value:"View reference directive",id:"view-reference-directive",children:[]},{value:"Prop directive",id:"prop-directive",children:[]},{value:"Event directive",id:"event-directive",children:[]},{value:"Event preventDefault directive",id:"event-preventdefault-directive",children:[]},{value:"List rendering directive",id:"list-rendering-directive",children:[]},{value:"Conditional rendering directive",id:"conditional-rendering-directive",children:[]}]}],l={rightToc:c};function p({components:e,...t}){return Object(i.b)("wrapper",Object(r.a)({},l,t,{components:e,mdxType:"MDXLayout"}),Object(i.b)("p",null,"Directive is another way to change the appearance and add additional behavior to an element."),Object(i.b)("h2",{id:"syntax"},"Syntax"),Object(i.b)("p",null,"The syntax of directive is ",Object(i.b)("inlineCode",{parentName:"p"},'<namespace>:<name>="<value>"'),".\nThe value can be a string or jsx expression container",Object(i.b)("inlineCode",{parentName:"p"},"{}")," or you can also omit the value because it is optional."),Object(i.b)("h2",{id:"available-directives"},"Available directives"),Object(i.b)("p",null,"The following are the list of available built-in directives we can use."),Object(i.b)("h3",{id:"view-model-directive"},"View model directive"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"v:model")),Object(i.b)("p",null,"View model directive is a two way binding of data.\nEvery time the model is changed from the view, the value in logic will be updated and the same thing will happen in the view when the model is updated from the logic."),Object(i.b)("p",null,"Ex."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),"import { Component } from '@munster-dev/core';\n\n@Component('app-greeting')\nexport class Greeting {\n\n    message: string;\n\n    render() {\n        return <input v:model={this.message} type=\"text\" />\n    }\n}\n")),Object(i.b)("h3",{id:"view-reference-directive"},"View reference directive"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"v:ref")),Object(i.b)("p",null,"This directive is used to create a reference of an element to the property of the logic."),Object(i.b)("p",null,"Ex."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),"import { Component } from '@munster-dev/core';\n\n@Component('app-greeting')\nexport class Greeting {\n\n    elem: HTMLElement;\n\n    render() {\n        return <h1 v:ref={this.elem}>Hello world!</h1>\n    }\n}\n")),Object(i.b)("p",null,"After view is initialized ",Object(i.b)("inlineCode",{parentName:"p"},"this.elem")," property should now contain a reference to the ",Object(i.b)("inlineCode",{parentName:"p"},"h1")," element in the view."),Object(i.b)("h3",{id:"prop-directive"},"Prop directive"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"prop:<name>")),Object(i.b)("p",null,"Prop directive is a directive that allows developers to pass any type of data from parent to child.\nCheck ",Object(i.b)("a",Object(r.a)({parentName:"p"},{href:"./props"}),"props")," for more information about this directive."),Object(i.b)("p",null,"Ex."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),"import { Component } from '@munster-dev/core';\n\n@Component('app-root')\nexport class Root {\n    user = {\n        fistName: 'John',\n        lastName: 'Smith'\n    };\n\n    render() {\n        return <app-child prop:user={this.user} />\n    }\n}\n")),Object(i.b)("h3",{id:"event-directive"},"Event directive"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"on:<event name>")),Object(i.b)("p",null,"Event directive is used to attach an event handler into an element.\nCheck the (event handling)","[/event-handling]"," for more information about this directive."),Object(i.b)("p",null,"Ex."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),"import { Component } from '@munster-dev/core';\n\n@Component('app-greeting')\nexport class Greeting {\n\n    greet() {\n        console.log('Hello World!');\n    }\n\n    render() {\n        return <button on:click={this.greet}>Greet</button>\n    }\n}\n")),Object(i.b)("p",null,"Here is a list of available events from (developer.mozilla.org)","[https://developer.mozilla.org/en-US/docs/Web/Events]","."),Object(i.b)("h3",{id:"event-preventdefault-directive"},"Event preventDefault directive"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"on-prevent:<event name>")),Object(i.b)("p",null,"This directive is the same the as event directive with ",Object(i.b)("inlineCode",{parentName:"p"},"on")," namespace but it stops the default action of an element from happening using ",Object(i.b)("inlineCode",{parentName:"p"},"event.preventDefault()"),"."),Object(i.b)("p",null,"Ex."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),"import { Component } from '@munster-dev/core';\n\n@Component('app-greeting')\nexport class Greeting {\n\n    submit() {\n        console.log('Hello World!');\n    }\n\n    render() {\n        return <form on-prevent:submit={this.submit}>\n            <input type=\"text\" />\n            <button>Submit</button>\n        </form>\n    }\n}\n")),Object(i.b)("p",null,"The default action when a form is submitted will refresh the page or go to another page.\nWhen using the ",Object(i.b)("inlineCode",{parentName:"p"},"on-prevent")," namespace, the default action will not happen so we have a better control of what actions to make after the form is submitted."),Object(i.b)("h3",{id:"list-rendering-directive"},"List rendering directive"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"v:for")),Object(i.b)("p",null,"List rendering directive allows developers to render a list of element based on the given array of data.\nCheck the (list rendering)","[/list-rendering]"," for more information."),Object(i.b)("p",null,"Ex."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),"import { Component } from '@munster-dev/core';\n\n@Component('app-list')\nexport class List {\n\n    array = [1, 2, 3];\n\n    render() {\n        return <p v:for={this.array}>Hello World!</p>\n    }\n}\n")),Object(i.b)("h3",{id:"conditional-rendering-directive"},"Conditional rendering directive"),Object(i.b)("p",null,Object(i.b)("inlineCode",{parentName:"p"},"v:if")),Object(i.b)("p",null,"Conditional rendering directive is used to conditionally render an element to the dom.\nIt will remove the element from the dom if the value of the directive is false and append the element if otherwise."),Object(i.b)("p",null,"Ex."),Object(i.b)("pre",null,Object(i.b)("code",Object(r.a)({parentName:"pre"},{className:"language-typescript"}),"import { Component } from '@munster-dev/core';\n\n@Component('app-greeting')\nexport class Greeting {\n\n    toggle = true;\n\n    render() {\n        return <h1 v:if={this.toggle}>Hello World!</h1>\n    }\n}\n")))}p.isMDXComponent=!0},96:function(e,t,n){"use strict";n.d(t,"a",(function(){return s})),n.d(t,"b",(function(){return m}));var r=n(0),i=n.n(r);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=i.a.createContext({}),d=function(e){var t=i.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},s=function(e){var t=d(e.components);return i.a.createElement(p.Provider,{value:t},e.children)},b={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},u=i.a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,a=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),s=d(n),u=r,m=s["".concat(a,".").concat(u)]||s[u]||b[u]||o;return n?i.a.createElement(m,c(c({ref:t},p),{},{components:n})):i.a.createElement(m,c({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,a=new Array(o);a[0]=u;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c.mdxType="string"==typeof e?e:r,a[1]=c;for(var p=2;p<o;p++)a[p]=n[p];return i.a.createElement.apply(null,a)}return i.a.createElement.apply(null,n)}u.displayName="MDXCreateElement"}}]);